// 配置生成源码JAR任务
task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId project.GROUP_ID
            artifactId project.ARTIFACT_ID
            version project.VERSION

            //依赖 bundleReleaseAar任务，并上传其产出的aar
            afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }
            artifact(sourceJar)

            // pom文件中声明依赖，从而传递到使用方
            pom.withXml {
                def apiSet = new HashSet()
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.api.allDependencies.each {
                    if (it.group != null && (it.name != null && "unspecified" != it.name) && it.version != null) {
                        println "api " + it.toString()
                        apiSet.add(it.toString())
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'api')
                    }
                }
                configurations.implementation.allDependencies.each {
                    if (apiSet.contains(it.toString())) {
                        return
                    }
                    println "implementation " + it.toString()
                    if (it.group != null && (it.name != null && "unspecified" != it.name) && it.version != null) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'implementation')
                    }
                }
            }
        }
    }

    repositories {
        mavenLocal()
        maven {
            url '../../maven'
        }
    }
}
